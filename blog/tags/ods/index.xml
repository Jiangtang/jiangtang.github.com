<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ODS on Jiangtang Hu | 胡江堂</title>
    <link>/tags/ods/</link>
    <description>Recent content in ODS on Jiangtang Hu | 胡江堂</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Sep 2014 14:24:16 +0000</lastBuildDate>
    
	<atom:link href="/tags/ods/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Order Matters: A Weird Behavior of SAS ODS Style Options</title>
      <link>/2014/09/04/order-matters-a-weird-behavior-of-sas-ods-style-options/</link>
      <pubDate>Thu, 04 Sep 2014 14:24:16 +0000</pubDate>
      
      <guid>/2014/09/04/order-matters-a-weird-behavior-of-sas-ods-style-options/</guid>
      <description>The codes to push a dataset to Excel (technically XML):
 ods tagsets.excelxp file=&amp;ldquo;test.xls&amp;rdquo;; &amp;#160; *#1; ods tagsets.excelxp options( sheet_name=&amp;#8217;test 1&amp;#8242;); proc print data=sashelp.class noobs; &amp;#160;&amp;#160;&amp;#160; var height / style={tagattr=&amp;#8217;format:text&amp;#8217;} style(column)={cellwidth=.5 in}; run;
*#2;&amp;#160; ods tagsets.excelxp options( sheet_name=&amp;#8217;test 2&amp;#8242;); proc print data=sashelp.class noobs; &amp;#160;&amp;#160;&amp;#160; var height / style(column)={cellwidth=.5 in} style={tagattr=&amp;#8217;format:text&amp;#8217;} ; run; &amp;#160; ods tagsets.excelxp close;
 The output of #1:
#2:
The difference among the two pieces of code, #1 and #2 is trivial, as far as observed: only the position of the ODS style options was swapped.</description>
    </item>
    
    <item>
      <title>3 Ways to Convert SAS Datasets to Plain Codes</title>
      <link>/2013/11/04/3-ways-to-convert-sas-datasets-to-plain-codes/</link>
      <pubDate>Mon, 04 Nov 2013 21:19:49 +0000</pubDate>
      
      <guid>/2013/11/04/3-ways-to-convert-sas-datasets-to-plain-codes/</guid>
      <description>1. If you have SAS Enterprise Guide installed Try one of Chris Hemedinger’s EG plug-ins, “_Data Set to DATA Step_”. Chris also wrote a post for it, Turn your data set into a DATA step program.
2. If you need to embed the dataset to SQL Clauses Use one of Eric Gebhart’s ODS tagsets, “SQL Tagset”.
3. If you want to make your hands dirty… You can also take a bite of some SAS base codes by Rick Langston.</description>
    </item>
    
    <item>
      <title>SAS ODS Tagsets Guru Eric Gebhart on Github</title>
      <link>/2013/09/17/sas-ods-tagsets-guru-eric-gebhart-on-github/</link>
      <pubDate>Tue, 17 Sep 2013 15:59:12 +0000</pubDate>
      
      <guid>/2013/09/17/sas-ods-tagsets-guru-eric-gebhart-on-github/</guid>
      <description>Check it out:
 https://github.com/EricGebhart
 Also, his homepage:
 http://ericgebhart.com/
 Shameless Ad: I will have a talk on Github for SAS programmers in the forthcoming SESUG (Oct 20-23, 2013) at St.Pete Beach, FL. Welcome to drop by if you are on the spot!</description>
    </item>
    
    <item>
      <title>SAS ODS Report Writing Interface: A Quick Demo</title>
      <link>/2013/02/17/sas-ods-report-writing-interface-a-quick-demo/</link>
      <pubDate>Sun, 17 Feb 2013 20:21:00 +0000</pubDate>
      
      <guid>/2013/02/17/sas-ods-report-writing-interface-a-quick-demo/</guid>
      <description>I personally nominated SAS ODS Report Writing Interface was the one of the best technology I found in SAS in 2012. It can generates reports cell by cell and row by row and has much flexibility to produce highly customized reports. Basically, to use it,
 first assign an ODS destination. Nothing new, and I prefer HTML like   ods html&amp;#160;&amp;#160; file=&amp;ldquo;output.html&amp;rdquo; style=sasweb;
  then create a object(instance) based on the ODS Report Writing class, odsout,   declare odsout myout();</description>
    </item>
    
    <item>
      <title>Get Started with SAS Tagsets.ExcelXP</title>
      <link>/2013/01/05/get-started-with-sas-tagsets.excelxp/</link>
      <pubDate>Sat, 05 Jan 2013 17:46:24 +0000</pubDate>
      
      <guid>/2013/01/05/get-started-with-sas-tagsets.excelxp/</guid>
      <description>Hate it or not (Yes I do), SAS programmers can’t just get rid of Microsoft Office Excel in their life.
Now my turn (with Tagsets.ExcelXP, I can at least get rid of DDE)…
0. SAS Templates window  A visual way to browse all ODS templates is to use windows command “ODSTEMPLATES” to invoke a SAS template window.
1.&amp;#160; Check the current ExcelXP tagset version  filename temp temp; ods tagsets.</description>
    </item>
    
    <item>
      <title>Best of SAS: A Personal Nomination 2012</title>
      <link>/2012/12/31/best-of-sas-a-personal-nomination-2012/</link>
      <pubDate>Mon, 31 Dec 2012 01:13:03 +0000</pubDate>
      
      <guid>/2012/12/31/best-of-sas-a-personal-nomination-2012/</guid>
      <description>There SAS applications/procedures/features were not necessarily available since 2012. This year I paid special attention to them when began to use SAS 9.3. The following notes are&amp;#160; totally my personal endorsement purely based my own experience as a user:
XML File Reading: SAS XML Mapper 
SAS XML Mapper itself is not an elegant tool from software design perspective (an example: I keep multiple versions because the latest version seems not carry out all the functionalities from old ones), but it is best XML file processing tool for SAS programmers like me.</description>
    </item>
    
    <item>
      <title>Where is SAS Output Anyway?</title>
      <link>/2012/09/22/where-is-sas-output-anyway/</link>
      <pubDate>Sat, 22 Sep 2012 22:10:12 +0000</pubDate>
      
      <guid>/2012/09/22/where-is-sas-output-anyway/</guid>
      <description>It is said in An Introduction to R, one of R official documents (Current Version: 2.15.1):
 There is an important difference in philosophy between S (and hence R) and the other main statistical systems. In S a statistical analysis is normally done as a series of steps, with intermediate results being stored in objects. Thus whereas SAS and SPSS will give copious output from a regression or discriminant analysis, R will give minimal output and store the results in a fit object for subsequent interrogation by further R functions.</description>
    </item>
    
  </channel>
</rss>