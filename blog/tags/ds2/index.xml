<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DS2 on Jiangtang Hu | 胡江堂</title>
    <link>/tags/ds2/</link>
    <description>Recent content in DS2 on Jiangtang Hu | 胡江堂</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Sep 2015 14:01:30 +0000</lastBuildDate>
    
	<atom:link href="/tags/ds2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SAS MapReduce: A Quick Followup by DS2</title>
      <link>/2015/09/04/sas-mapreduce-a-quick-followup-by-ds2/</link>
      <pubDate>Fri, 04 Sep 2015 14:01:30 +0000</pubDate>
      
      <guid>/2015/09/04/sas-mapreduce-a-quick-followup-by-ds2/</guid>
      <description>(DS2 would be the king!) Years ago I made up a piece of SAS code to demonstrate the basic idea of Map-Reduce. Now this idea can be best implemented by this piece of workable program with PROC DS2 (tested in SAS 9.4 TS1M2, Win7):
 PROC DS2;
/* create some data &amp;#8211;/ data input_data / overwrite = yes; dcl double d; method init(); &amp;#160;&amp;#160; dcl int i; &amp;#160;&amp;#160; do i = 1 to 10000000; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; /&amp;#8211; create some money values &amp;#8211;*/ &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; d = round( (ranuni(123) * 10 ), .</description>
    </item>
    
    <item>
      <title>A Quick Look at SAS DS2 Merge</title>
      <link>/2015/09/04/a-quick-look-at-sas-ds2-merge/</link>
      <pubDate>Fri, 04 Sep 2015 12:02:39 +0000</pubDate>
      
      <guid>/2015/09/04/a-quick-look-at-sas-ds2-merge/</guid>
      <description>The code:
 data a; &amp;#160;&amp;#160;&amp;#160; input i a $ b $; &amp;#160;&amp;#160;&amp;#160; datalines; &amp;#160;&amp;#160;&amp;#160; 1 a1A b1 &amp;#160;&amp;#160;&amp;#160; 1 a1A b1 &amp;#160;&amp;#160;&amp;#160; 2 a2 b2 &amp;#160;&amp;#160;&amp;#160; ; run;
data b; &amp;#160;&amp;#160;&amp;#160; input i a $ c $; &amp;#160;&amp;#160;&amp;#160; datalines; &amp;#160;&amp;#160;&amp;#160; 1 a1C c1 &amp;#160;&amp;#160;&amp;#160; 2 .&amp;#160;&amp;#160; c2 &amp;#160;&amp;#160;&amp;#160; 3 .&amp;#160; c3 &amp;#160;&amp;#160;&amp;#160; ; run;
data mrge; &amp;#160;&amp;#160;&amp;#160; merge a b; &amp;#160;&amp;#160;&amp;#160; by i; run;
proc ds2; &amp;#160;&amp;#160;&amp;#160; data ds2; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; method run(); &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; merge a b; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; by i; &amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; end; &amp;#160;&amp;#160;&amp;#160;&amp;#160; enddata; &amp;#160;&amp;#160;&amp;#160; run; quit;</description>
    </item>
    
  </channel>
</rss>