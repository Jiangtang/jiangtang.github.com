<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Iml on Lithium Theme</title>
    <link>/tags/iml/index.xml</link>
    <description>Recent content in Iml on Lithium Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/tags/iml/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>SAS Combinatorial Functions: Snippets</title>
      <link>/2015/06/25/sas-combinatorial-functions-snippets/</link>
      <pubDate>Thu, 25 Jun 2015 12:55:38 +0000</pubDate>
      
      <guid>/2015/06/25/sas-combinatorial-functions-snippets/</guid>
      <description>

&lt;h3 id=&#34;1-permutation-and-combination&#34;&gt;1. Permutation and Combination&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;; font-size: xx-small;&#34;&gt;data &lt;em&gt;null&lt;/em&gt;;&lt;br /&gt; n = 5;&lt;br /&gt; r = 2;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;; font-size: xx-small;&#34;&gt;   *the factorial of a number;&lt;br /&gt; fact=fact(n);&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;; font-size: xx-small;&#34;&gt;   *for positive integers, fact(n) = gamma(n+1);&lt;br /&gt; gamm=gamma(n + 1);&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;; font-size: xx-small;&#34;&gt;   *C(n,r): number of combinations of n objects selected r ;&lt;br /&gt; *n! / [r!(n-r)!];&lt;br /&gt; comb1 = comb(n,r);&lt;br /&gt; comb2 = fact(n) / (fact&amp;reg; * fact(n-r));&lt;br /&gt; comb3 = gamma(n+1) / (gamma(r+1) * gamma(n-r+1));&lt;br /&gt; comb4 = exp(lcomb(n,r));&lt;br /&gt; comb5 = exp(lgamma(n+1)-lgamma(r+1)-lgamma(n-r+1));&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;; font-size: xx-small;&#34;&gt;   *A(n,r): number of permutation (ordered arrangements);&lt;br /&gt; *n! / (n-r)!;&lt;br /&gt; perm1 = perm(n,r);&lt;br /&gt; perm2 = fact(n) /  fact(n-r);&lt;br /&gt; perm3 = gamma(n+1) /  gamma(n-r+1);&lt;br /&gt; perm4 = exp(lperm(n,r));&lt;br /&gt; perm5 = exp(lgamma(n+1)-lgamma(n-r+1));&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;   put (&lt;em&gt;all&lt;/em&gt;) (= / );&lt;br /&gt; run;&lt;/span&gt;&lt;br /&gt; &lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;Note functions &lt;em&gt;fact()&lt;/em&gt; and &lt;em&gt;gamm()&lt;/em&gt; can quickly reach out their limitations(&lt;em&gt;try n=&lt;span style=&#34;color: #ff0000;&#34;&gt;171 &lt;/span&gt;&lt;/em&gt;and check the overflow notes in Log window).&lt;/span&gt;&lt;/p&gt;

&lt;h3 align=&#34;left&#34;&gt;
  2. Generate Unique Pairs
&lt;/h3&gt;

&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;Question see &lt;/span&gt;&lt;a href=&#34;http://stackoverflow.com/questions/19875633/how-to-pick-unique-pairs-from-a-single-list&#34;&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;here&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;; font-size: xx-small;&#34;&gt;data &lt;em&gt;null&lt;/em&gt;;&lt;br /&gt; array x[5] $1 (&amp;#8220;A&amp;#8221; &amp;#8220;C&amp;#8221; &amp;#8220;D&amp;#8221; &amp;#8220;B&amp;#8221; &amp;#8220;E&amp;#8221;);&lt;br /&gt; n = dim(x);&lt;br /&gt; r = 2;&lt;br /&gt; ncomb = comb(n, r);&lt;br /&gt; do j = 1 to ncomb+1;&lt;br /&gt; rc = &lt;span style=&#34;color: #ff0000;&#34;&gt;allcomb&lt;/span&gt;(j, r, of x[*]);&lt;br /&gt; if rc &amp;lt; 0 then leave;&lt;br /&gt; put j 5. +3 x1 “- ” x2 +3;&lt;br /&gt; end;&lt;br /&gt; run;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;The output in Log:&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;1   A &amp;#8211; C&lt;br /&gt; 2   A &amp;#8211; E&lt;br /&gt; 3   A &amp;#8211; B&lt;br /&gt; 4   A &amp;#8211; D&lt;br /&gt; 5   C &amp;#8211; D&lt;br /&gt; 6   C &amp;#8211; E&lt;br /&gt; 7   C &amp;#8211; B&lt;br /&gt; 8   D &amp;#8211; B&lt;br /&gt; 9   D &amp;#8211; E&lt;br /&gt; 10   B &amp;#8211; E&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;Or if you like alphabetical sorted pairs:&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;; font-size: xx-small;&#34;&gt;data &lt;em&gt;null&lt;/em&gt;;&lt;br /&gt; array x[5] $1 (&amp;#8220;A&amp;#8221; &amp;#8220;C&amp;#8221; &amp;#8220;D&amp;#8221; &amp;#8220;B&amp;#8221; &amp;#8220;E&amp;#8221;);&lt;br /&gt; n = dim(x);&lt;br /&gt; r = 2;&lt;br /&gt; ncomb = comb(n, r);&lt;br /&gt; do j = 1 to ncomb+1;&lt;br /&gt; rc = &lt;span style=&#34;color: #ff0000;&#34;&gt;lexcomb&lt;/span&gt;(j, r, of x[*]);&lt;br /&gt; if rc &amp;lt; 0 then leave;&lt;br /&gt; put j 5. +3 x1 “- ” x2 +3;&lt;br /&gt; end;&lt;br /&gt; run;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;The output:&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;1   A &amp;#8211; B&lt;br /&gt; 2   A &amp;#8211; C&lt;br /&gt; 3   A &amp;#8211; D&lt;br /&gt; 4   A &amp;#8211; E&lt;br /&gt; 5   B &amp;#8211; C&lt;br /&gt; 6   B &amp;#8211; D&lt;br /&gt; 7   B &amp;#8211; E&lt;br /&gt; 8   C &amp;#8211; D&lt;br /&gt; 9   C &amp;#8211; E&lt;br /&gt; 10   D &amp;#8211; E&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;I checked &lt;/span&gt;&lt;a href=&#34;http://blogs.sas.com/content/iml/&#34;&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;Rick Wicklin’s blog&lt;/span&gt;&lt;/a&gt; &lt;span style=&#34;font-size: xx-small;&#34;&gt;and found  &lt;/span&gt;&lt;a href=&#34;http://blogs.sas.com/content/iml/2013/09/30/generate-combinations-in-sas.html&#34;&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;PROC IML&lt;/span&gt;&lt;/a&gt; &lt;span style=&#34;font-size: xx-small;&#34;&gt;offers a much more intuitive approach to this problem:&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;; font-size: xx-small;&#34;&gt;proc iml;&lt;br /&gt; n = 5;&lt;br /&gt; r = 2;&lt;br /&gt; idx = &lt;span style=&#34;color: #ff0000;&#34;&gt;allcomb&lt;/span&gt;(n, r);&lt;br /&gt; print idx;&lt;br /&gt; quit;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;The output:&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;1 2&lt;br /&gt; 2 3&lt;br /&gt; 1 3&lt;br /&gt; 3 4&lt;br /&gt; 2 4&lt;br /&gt; 1 4&lt;br /&gt; 4 5&lt;br /&gt; 3 5&lt;br /&gt; 2 5&lt;br /&gt; 1 5 &lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;or make the output more readable:&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;; font-size: xx-small;&#34;&gt;proc iml;&lt;br /&gt; n = 5;&lt;br /&gt; r = 2;&lt;br /&gt; idx = allcomb(n, r);&lt;br /&gt; print idx;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;; font-size: xx-small;&#34;&gt;    Items = {&amp;#8220;A&amp;#8221; &amp;#8220;C&amp;#8221; &amp;#8220;D&amp;#8221; &amp;#8220;B&amp;#8221; &amp;#8220;E&amp;#8221;};&lt;br /&gt; S = Items[ ,idx];&lt;br /&gt; S = shape(S, 0, r);&lt;br /&gt; print S[r=(char(1:nrow(S)))];&lt;br /&gt; quit;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;the output:&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;1  A C&lt;br /&gt; 2  C D&lt;br /&gt; 3  A D&lt;br /&gt; 4  D B&lt;br /&gt; 5  C B&lt;br /&gt; 6  A B&lt;br /&gt; 7  B E&lt;br /&gt; 8  D E&lt;br /&gt; 9  C E&lt;br /&gt; 10 A E &lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;3-generate-unique-pairs-a-macro&#34;&gt;3. Generate Unique Pairs: A Macro&lt;/h3&gt;

&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;Years ago when the build-in functions above might not be available in SAS, a &lt;/span&gt;&lt;a href=&#34;http://www.urz.uni-heidelberg.de/statistik/sas/doc/ts498-combperm.txt&#34;&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;macro %combo&lt;/span&gt;&lt;/a&gt; &lt;span style=&#34;font-size: xx-small;&#34;&gt;did the same job:&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;; font-size: xx-small;&#34;&gt;%combo(2,a,c,d,b,e)&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;The output:&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;1  a c&lt;br /&gt; 2  a d&lt;br /&gt; 3  a b&lt;br /&gt; 4  a e&lt;br /&gt; 5  c d&lt;br /&gt; 6  c b&lt;br /&gt; 7  c e&lt;br /&gt; 8  d b&lt;br /&gt; 9  d e&lt;br /&gt; 10 b e&lt;br /&gt; &lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span style=&#34;font-size: xx-small;&#34;&gt;It’s fun to check out the macro how to implement it by arrays.&lt;/span&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Incorporate SAS/IML to Base SAS?</title>
      <link>/2012/10/16/incorporate-sas/iml-to-base-sas/</link>
      <pubDate>Tue, 16 Oct 2012 22:28:41 +0000</pubDate>
      
      <guid>/2012/10/16/incorporate-sas/iml-to-base-sas/</guid>
      <description>&lt;p&gt;&lt;font size=&#34;1&#34;&gt;Since SAS 9.3, ODS Graphics was moved into Base SAS and other statistical procedures, which means the SAS/Graph license is not needed anymore to access ODS Graphics facilities. It’s definitely nice, but from customers’ point of view, it is not critical necessary: since the “minimum set of SAS system” in most SAS sessions includes the Base SAS, SAS/Stat and SAS/Graph, there is almost no impact for SAS users to switch the license of ODS Graphics. Actually, I do think SAS/IML is better to be included in BASE SAS (play Proc IML in BASE SAS; a MATRIX statement in data step is definitely another bonus) :&lt;/font&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;font size=&#34;1&#34;&gt;IML itself, seems have no intention to replace SAS/Stat, SAS/ETS, SAS/QC and other SAS statistical facilities in matrix way like R or Matlab. Instead, by enhancing the abilities to call SAS data steps(including macros), SAS Procedures and R inside,&amp;#160; IML seems to be glad as glue to leverage multiple programming elements. &lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font size=&#34;1&#34;&gt;BASE SAS is a collection of lots of programming elements: data step, macro, SQL, array, hash, Java objects, ODS, XML and bunches of procedures. IML is clearly a programming tool rather than a specific application(SAS/Stat and such) and if it is added to BASE SAS, then the SAS programmers&amp;#160; will have one more data structure (matrix) to play with besides SAS table (R copies this idea as data frame), array and hash table (dictionary).&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font size=&#34;1&#34;&gt;Actually it is an emergent need (for a matrix). Processing different rows in variable(s) is not an easy task in SAS data steps. Mostly SAS programmers utilize arrays (plus some tricky functions like LAG and DIF) and Dow-loop after its advent. There are really advanced programming techniques, but in matrix with index, such manipulation is pretty easy and straightforward (and saving your loops).&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font size=&#34;1&#34;&gt;Although IML can communicate with BASE SAS, but for portable purpose (IML is not expected in every SAS session), most SAS programmers prefer to submit pure BASE codes for data processing. Furthermore, we can even understand why SAS programmers in general invest less in IML. It’s not good: just think about a BASE SAS programmer without a handy matrix manipulation tool (&lt;em&gt;and think about R&lt;/em&gt;)!&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;font size=&#34;1&#34;&gt;Personally I played IML for a while and still keep eyes on its updates. But since I had some SAS machines without IML, I realize that IML can’t be used as a production language in my clinical SAS programming life: just can’t afford the latency&amp;#160; to ask IT administrators (including in clients side) to manage it!&lt;/font&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Set Up R (for SAS Programmers)</title>
      <link>/2012/09/30/set-up-r-for-sas-programmers/</link>
      <pubDate>Sun, 30 Sep 2012 21:19:31 +0000</pubDate>
      
      <guid>/2012/09/30/set-up-r-for-sas-programmers/</guid>
      <description>

&lt;blockquote&gt;
&lt;h1 id=&#34;font-size-1-yep-i-am-a-sas-programmer-during-the-day-time-i-use-sas-for-my-work-at-the-evening-i-use-r-for-entertainment-font&#34;&gt;&lt;font size=&#34;1&#34;&gt;Yep, I am a SAS programmer: during the day time, I use SAS for my work; at the evening, I use R for entertainment.—&lt;/font&gt;&lt;/h1&gt;

&lt;h1 id=&#34;a-href-http-www-sasanalysis-com-2011-05-support-vector-machine-for-html-target-blank-font-size-1-charlie-huang-font-a&#34;&gt;&lt;a href=&#34;http://www.sasanalysis.com/2011/05/support-vector-machine-for.html&#34; target=&#34;_blank&#34;&gt;&lt;font size=&#34;1&#34;&gt;Charlie Huang&lt;/font&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;Getting start to play with R (it is really a wonderful learning tool):&lt;/p&gt;

&lt;h5 id=&#34;12-a-href-http-support-sas-com-documentation-cdl-en-imlsstat-65548-html-default-viewer-htm-imlsstat-statr-toc-htm-target-blank-sas-iml-studio-and-r-integration-a-not-tested&#34;&gt;12. &lt;a href=&#34;http://support.sas.com/documentation/cdl/en/imlsstat/65548/HTML/default/viewer.htm#imlsstat_statr_toc.htm&#34; target=&#34;_blank&#34;&gt;SAS IML Studio and R Integration&lt;/a&gt; (&lt;em&gt;not tested&lt;/em&gt;)&lt;/h5&gt;

&lt;h5 id=&#34;11-a-href-http-support-sas-com-documentation-cdl-en-imlug-65547-html-default-viewer-htm-imlug-r-sect001-htm-target-blank-sas-iml-and-r-integration-a-not-tested&#34;&gt;11. &lt;a href=&#34;http://support.sas.com/documentation/cdl/en/imlug/65547/HTML/default/viewer.htm#imlug_r_sect001.htm&#34; target=&#34;_blank&#34;&gt;SAS IML and R Integration&lt;/a&gt; (&lt;em&gt;not tested&lt;/em&gt;)&lt;/h5&gt;

&lt;h5 id=&#34;10-a-href-http-www-jstatsoft-org-v46-c02-target-blank-sas-base-and-r-integration-proc-r-a&#34;&gt;10. &lt;a href=&#34;http://www.jstatsoft.org/v46/c02&#34; target=&#34;_blank&#34;&gt;SAS Base and R Integration: PROC R&lt;/a&gt;&lt;/h5&gt;

&lt;p&gt;also &lt;a href=&#34;http://sas-and-r.blogspot.com/2012/01/sas-macro-simplifies-sas-and-r.html&#34; target=&#34;_blank&#34;&gt;a blog post&lt;/a&gt;.&lt;/p&gt;

&lt;h5 id=&#34;9-data-transfer-among-r-and-sas-xpt&#34;&gt;9. Data transfer among R and SAS(xpt)&lt;/h5&gt;

&lt;p&gt;&lt;font size=&#34;1&#34;&gt;SAS: &lt;em&gt;&lt;a href=&#34;http://www.sas.com/industry/government/fda/macro.html&#34; target=&#34;_blank&#34;&gt;SAS Macros that Convert a Directory of Transport Files&lt;/a&gt;&lt;/em&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font size=&#34;1&#34;&gt;R: use &lt;a href=&#34;http://stat.ethz.ch/R-manual/R-devel/library/foreign/html/read.xport.html&#34; target=&#34;_blank&#34;&gt;read.xport&lt;/a&gt; function in Foreign package and write.xport in &lt;a href=&#34;http://cran.cnr.berkeley.edu/web/packages/SASxport/index.html&#34; target=&#34;_blank&#34;&gt;SASXport&lt;/a&gt; package to read/write xpt file&lt;/font&gt;&lt;/p&gt;

&lt;h5 id=&#34;8-data-transfer-among-r-and-sas-csv&#34;&gt;8. Data transfer among R and SAS(CSV)&lt;/h5&gt;

&lt;p&gt;&lt;font size=&#34;1&#34;&gt;SAS: use &lt;/font&gt;&lt;a href=&#34;http://support.sas.com/documentation/cdl/en/lebaseutilref/63492/HTML/default/viewer.htm#n0yo3bszlrh0byn1j4fxh4ndei8u.htm&#34; target=&#34;_blank&#34;&gt;&lt;font size=&#34;1&#34;&gt;%DS2CSV Macro&lt;/font&gt;&lt;/a&gt; &lt;font size=&#34;1&#34;&gt;to export SAS dataset to CSV file&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font size=&#34;1&#34;&gt;R: use &lt;a href=&#34;http://stat.ethz.ch/R-manual/R-devel/library/utils/html/read.table.html&#34; target=&#34;_blank&#34;&gt;read.csv&lt;/a&gt; /&lt;a href=&#34;http://stat.ethz.ch/R-manual/R-devel/library/utils/html/write.table.html&#34; target=&#34;_blank&#34;&gt;write.csv&lt;/a&gt;&lt;/font&gt; &lt;font size=&#34;1&#34;&gt;function to read/write CSV file&lt;/font&gt;&lt;/p&gt;

&lt;h5 id=&#34;font-style-font-weight-bold-7-font-font-style-font-weight-bold-a-href-http-gallery-r-enthusiasts-com-target-blank-the-r-graph-gallery-a-font&#34;&gt;&lt;font style=&#34;font-weight: bold&#34;&gt;7. &lt;/font&gt;&lt;font style=&#34;font-weight: bold&#34;&gt;&lt;a href=&#34;http://gallery.r-enthusiasts.com/&#34; target=&#34;_blank&#34;&gt;The R Graph Gallery&lt;/a&gt;&lt;/font&gt;&lt;/h5&gt;

&lt;h5 id=&#34;6-a-href-http-www-r-bloggers-com-target-blank-r-blogs-a&#34;&gt;6. &lt;a href=&#34;http://www.r-bloggers.com/&#34; target=&#34;_blank&#34;&gt;R blogs&lt;/a&gt;&lt;/h5&gt;

&lt;h5 id=&#34;5-a-href-http-www-r-project-org-search-html-target-blank-r-search-a&#34;&gt;5. &lt;a href=&#34;http://www.r-project.org/search.html&#34; target=&#34;_blank&#34;&gt;R search&lt;/a&gt;&lt;/h5&gt;

&lt;h5 id=&#34;4-a-href-http-cran-r-project-org-web-views-target-blank-r-task-view-a-packages-recommended&#34;&gt;4. &lt;a href=&#34;http://cran.r-project.org/web/views/&#34; target=&#34;_blank&#34;&gt;R Task View&lt;/a&gt;: packages recommended&lt;/h5&gt;

&lt;h5 id=&#34;3-a-href-http-cran-cnr-berkeley-edu-web-packages-available-packages-by-name-html-target-blank-all-r-packages-a&#34;&gt;3. &lt;a href=&#34;http://cran.cnr.berkeley.edu/web/packages/available_packages_by_name.html&#34; target=&#34;_blank&#34;&gt;All R packages&lt;/a&gt;&lt;/h5&gt;

&lt;h5 id=&#34;2-install-a-href-http-www-rstudio-org-download-target-blank-rstudio-a-a-much-better-r-ide&#34;&gt;2. Install &lt;a href=&#34;http://www.rstudio.org/download/&#34; target=&#34;_blank&#34;&gt;RStudio&lt;/a&gt;, a much better R IDE&lt;/h5&gt;

&lt;h5 id=&#34;1-get-a-href-http-cran-cnr-berkeley-edu-target-blank-r-software-a&#34;&gt;1. Get &lt;a href=&#34;http://cran.cnr.berkeley.edu/&#34; target=&#34;_blank&#34;&gt;R software&lt;/a&gt;&lt;/h5&gt;
</description>
    </item>
    
    <item>
      <title>Retrieve blogs using SAS</title>
      <link>/2011/07/20/retrieve-blogs-using-sas/</link>
      <pubDate>Wed, 20 Jul 2011 21:47:46 +0000</pubDate>
      
      <guid>/2011/07/20/retrieve-blogs-using-sas/</guid>
      <description>&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;Recently I posted a &lt;/span&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/2011/07/17/sas-bloggers-in-action1-rick-wicklin-sasiml-and-color-revolution/&#34; target=&#34;_blank&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;frequency analysis&lt;/span&gt;&lt;/a&gt; &lt;span style=&#34;font-size: small;&#34;&gt;on Rick Wicklin’s popular &lt;/span&gt;&lt;a href=&#34;http://blogs.sas.com/iml/&#34; target=&#34;_blank&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;SAS/IML blog&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;font-size: small;&#34;&gt;. Sanjay Matange also produced a nice &lt;/span&gt;&lt;a href=&#34;https://sites.google.com/site/odsgraphics/general/rick-s-blog-history-heatmap&#34; target=&#34;_blank&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;heatmap on Rick’s blogging history&lt;/span&gt;&lt;/a&gt; &lt;span style=&#34;font-size: small;&#34;&gt;using the summary data I published. Here just release the ideas and SAS codes to get data from Rick’s blog dynamically. You may modify the codes slightly to obtain data from all other SAS in-house blogs (&lt;/span&gt;&lt;a href=&#34;http://blogs.sas.com/index.php&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;http://blogs.sas.com/index.php&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;font-size: small;&#34;&gt;) since they share the same template. For other blogs, you should research the web pages accordingly to get the best suitable methods and this post can also serve as an example.&lt;/span&gt;&lt;/p&gt;

&lt;h1 id=&#34;first-step-define-the-scope&#34;&gt;&lt;strong&gt;First step: define the scope&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;For my purpose, I only need the titles and publish dates of Rick’s posts. It is so called the “metadata” of the blog. I do not need all the post contents. By the way, if all information needed, you can use a blog backup tool, or write codes to retrieve all the pages of &lt;/span&gt;&lt;a href=&#34;http://blogs.sas.com/iml&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;http://blogs.sas.com/iml&lt;/span&gt;&lt;/a&gt; at the maximum depth&lt;span style=&#34;font-size: small;&#34;&gt;, or simply, you can write to Rick and say: hey Rick, could you please send me all the contents of your blog? And Rick may go to the management console of his own blog, export all the contents to an XML file and get back to you.&lt;/span&gt;&lt;/p&gt;

&lt;h1 id=&#34;second-step-analyze-the-web-pages&#34;&gt;&lt;strong&gt;Second step: analyze the web pages&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;Browse to the right panel of Rick’s blog, in the ARCHIVES frame, click “&lt;a href=&#34;http://blogs.sas.com/iml/index.php?/archive&#34; target=&#34;_blank&#34;&gt;Older&lt;/a&gt;”&lt;/span&gt;&lt;span style=&#34;font-size: small;&#34;&gt;:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image0026.jpg&#34;&gt;&lt;img style=&#34;display: block; float: none; margin-left: auto; margin-right: auto; border-width: 0px;&#34; title=&#34;clip_image002&#34; src=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image002_thumb1.jpg&#34; alt=&#34;clip_image002&#34; width=&#34;235&#34; height=&#34;298&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;And you get &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image0035.gif&#34;&gt;&lt;img style=&#34;display: block; float: none; margin-left: auto; margin-right: auto; border-width: 0px;&#34; title=&#34;clip_image003&#34; src=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image003_thumb.gif&#34; alt=&#34;clip_image003&#34; width=&#34;362&#34; height=&#34;274&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;This page just gives a big picture of Rick’s blog (ARCHIVE section is always a good place to get such metadata, for example, &lt;a href=&#34;http://www.jiangtanghu.com/blog/archives/&#34; target=&#34;_blank&#34;&gt;archives for my blog&lt;/a&gt;&lt;/span&gt;&lt;span style=&#34;font-size: small;&#34;&gt;). But we need more. Click “&lt;a href=&#34;http://blogs.sas.com/iml/index.php?/archives/2010/09/summary.html&#34; target=&#34;_blank&#34;&gt;view topics&lt;/a&gt;” for example of September, 2010:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image0045.gif&#34;&gt;&lt;img style=&#34;display: block; float: none; margin-left: auto; margin-right: auto; border-width: 0px;&#34; title=&#34;clip_image004&#34; src=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image004_thumb.gif&#34; alt=&#34;clip_image004&#34; width=&#34;372&#34; height=&#34;443&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;This page is exactly what we want with titles and dates. Open an editor to write codes immediately to read all the information in this page?—wait. Currently this blog has posts across 11 months and you can expect the increase. You should design a dynamic method to read all the topics pages: Sep 2010, Oct 2010, … and, &lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;today()&lt;/span&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;Return to the &lt;a href=&#34;http://blogs.sas.com/iml/index.php?/archive&#34; target=&#34;_blank&#34;&gt;archives page&lt;/a&gt;. RCM (right click your mouse) and select “View page source” if you use Google Chrome web browser (“View Source” in IE; “View Page Source” in Firefox) and you get all the HTML scripts (&lt;strong&gt;Note: you DO not need any knowledge of HTML to understand this post&lt;/strong&gt;). Copy and paste them into a text editor supporting HTML syntax highlighting (such as Notepad++). Search all instances of “view topics” we mentioned before:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image0067.jpg&#34;&gt;&lt;img style=&#34;display: block; float: none; margin-left: auto; margin-right: auto; border-width: 0px;&#34; title=&#34;clip_image006&#34; src=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image006_thumb2.jpg&#34; alt=&#34;clip_image006&#34; width=&#34;519&#34; height=&#34;312&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;We are lucky. They are 11 instances of “view topics” accompanying with 11 hyperlinks for the currently 11 months’ archives of Rick’s blog. We can read such 11 hyperlinks to a macro array for dynamic retrieval.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;Then we return to the single &lt;a href=&#34;http://blogs.sas.com/iml/index.php?/archives/2010/09/summary.html&#34; target=&#34;_blank&#34;&gt;topics page&lt;/a&gt;, for example of September, 2010&lt;/span&gt;&lt;span style=&#34;font-size: small;&#34;&gt;. Review the HTML source file. Search for “posted_by_date” and we get 14 instances which is same as the number of posts in September 2010:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image0086.jpg&#34;&gt;&lt;img style=&#34;display: block; float: none; margin-left: auto; margin-right: auto; border-width: 0px;&#34; title=&#34;clip_image008&#34; src=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image008_thumb1.jpg&#34; alt=&#34;clip_image008&#34; width=&#34;518&#34; height=&#34;307&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;We should also need to locate all the instances of titles. Search “/iml/index.php?/archives/” and we get 17 responses:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image0106.jpg&#34;&gt;&lt;img style=&#34;display: block; float: none; margin-left: auto; margin-right: auto; border-width: 0px;&#34; title=&#34;clip_image010&#34; src=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image010_thumb1.jpg&#34; alt=&#34;clip_image010&#34; width=&#34;517&#34; height=&#34;298&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;We see 3 instances at end of the finding results don’t contain any titles. You can check other pages to confirm such pattern. Yes we can use regular expressions to parse the HTML pages to locate more exactly for the titles. But for a quick job and due to the relative simple HTML pages, some basic SAS character functions are enough for our purpose. In the following codes, limited regular expressions are used only to remove HTML tags such as “&lt;a href=”.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;After such explorative search of HTML scripts, we can get the basic idea where can we find the interested information. Then we begin to coding work.&lt;/span&gt;&lt;/p&gt;

&lt;h1 id=&#34;third-step-coding-at-last&#34;&gt;&lt;strong&gt;Third step: Coding at last!&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;For our purpose, we should first read the archive page to get all the topics links to a macro array, then read the all the topics pages dynamically. Finally, we should also add the all the calendar dates with holidays. Some friends may find that they met piece of the following codes before. Yes, such codes just assembled some skills what I learned from Art Carpenter, Richard DeVenezia, Jian Dai and lots of programmers before!&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-1-read-archive-page&#34;&gt;3-1: read archive page&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;%let URL=&lt;/span&gt;&lt;a href=&#34;http://blogs.sas.com/iml/index.php?/archive;&#34;&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;http://blogs.sas.com/iml/index.php?/archive;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;filename archive URL &amp;#8220;&amp;amp;URL&amp;#8221;; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;data archive;&lt;br /&gt; length text $1024;&lt;br /&gt; infile archive lrecl=1024;&lt;br /&gt; input text $;&lt;br /&gt; text= &lt;em&gt;infile&lt;/em&gt;;&lt;br /&gt; if index(text, &amp;#8220;&amp;gt;view topics&amp;lt;&amp;#8220;) then output;&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;data  archive1;&lt;br /&gt; set archive;&lt;br /&gt; summary=scan(text,4,&amp;rsquo;&amp;#8221;&amp;#8216;);&lt;br /&gt; run;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;3-2-read-all-topics-pages&#34;&gt;3-2: read all topics pages&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;data &lt;em&gt;null&lt;/em&gt;;&lt;br /&gt; set  archive1 end=eof;&lt;br /&gt; I+1;&lt;br /&gt; II=left(put(I,2.));&lt;br /&gt; call symputx(&amp;#8216;summary&amp;#8217;||II,summary);&lt;br /&gt; if eof then call symputx(&amp;#8216;total&amp;#8217;,II);&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;%macro readit;&lt;br /&gt; %do i=1 %to &amp;total;&lt;br /&gt; filename f&amp;amp;i URL &amp;#8220;&amp;amp;&amp;amp;summary&amp;amp;i&amp;#8221;;    &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;        data f&amp;i;&lt;br /&gt; length text $1024;&lt;br /&gt; infile f&amp;amp;i lrecl=1024;&lt;br /&gt; input text $;&lt;br /&gt; text= &lt;em&gt;infile&lt;/em&gt;;&lt;br /&gt; if index(text, &amp;#8220;/iml/index.php?/archives/&amp;#8221;) or index(text, &amp;#8220;posted_by_date&amp;#8221;) then output;&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;    &lt;span style=&#34;color: #ff0000;&#34;&gt;/&lt;em&gt;remove HTML tags;&lt;/em&gt;/&lt;/span&gt;&lt;br /&gt; data ff&amp;i;&lt;br /&gt; set f&amp;i;&lt;br /&gt; prx=prxparse(&amp;#8220;s/&amp;lt;.*?&amp;gt;//&amp;#8221;);&lt;br /&gt; call prxchange(prx,99,text);&lt;br /&gt; drop prx; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;        flag=ifn(mod(&lt;em&gt;n&lt;/em&gt;,2),1,2);&lt;br /&gt; grpn=&amp;i;&lt;br /&gt; if index(text,&amp;#8221;201&amp;#8243;) and length(text)&lt;10 then delete;&lt;span style=&#34;color: #ff0000;&#34;&gt;/&lt;em&gt;be carefull! hard coding;&lt;/em&gt;/&lt;br /&gt; &lt;/span&gt;        seq=&lt;em&gt;n&lt;/em&gt;;&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;     /&lt;em&gt;transpose data;&lt;/em&gt;/&lt;br /&gt; data fff&amp;i;&lt;br /&gt; set ff&amp;i;&lt;br /&gt; by grpn seq flag; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;        &lt;span style=&#34;color: #ff0000;&#34;&gt;retain&lt;/span&gt; title;&lt;br /&gt; if first.flag then title=lag(text);&lt;br /&gt; if flag=1 then delete;&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;    %end; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;%mend readit;&lt;br /&gt; %readit &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;%macro getall;&lt;br /&gt; data Rick;&lt;br /&gt; set %do i=1 %to &amp;total; fff&amp;amp;i %end; ;&lt;br /&gt; seq=seq/2;&lt;br /&gt; drop flag;&lt;br /&gt; run;&lt;br /&gt; %mend getall;&lt;br /&gt; %getall &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;data rick2;&lt;br /&gt; set rick; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;    datetime=scan(text,2,&amp;#8221;,&amp;#8221;);&lt;br /&gt; year=scan(text,2,&amp;#8221;.&amp;#8221;);&lt;br /&gt; month=scan(scan(text,2,&amp;#8221;,&amp;#8221;),1);&lt;br /&gt; day=scan(scan(text,2,&amp;#8221;,&amp;#8221;),2);&lt;br /&gt; week=scan(text,6);&lt;br /&gt; dt=compress(catx(&amp;#8220;&amp;#8221;,day,substr(month,1,3),year));&lt;br /&gt; worddat=input(dt,date9.);&lt;br /&gt; format worddat  ddmmyy10.;                         &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;    m=scan(put(worddat,ddmmyy10.),2);&lt;br /&gt; my=compress(catx(&amp;#8220;&amp;#8221;,year,m));&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;proc sort ;&lt;br /&gt; by  worddat descending seq ;&lt;br /&gt; run;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;It is also interesting to add additional information for further analysis, such as all calendar dates during Rick’s blogging history and holidays.&lt;/p&gt;

&lt;h3 id=&#34;3-3-get-all-calendar-dates&#34;&gt;3-3: get all calendar dates&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;proc sort data=rick2 out=rick3 nodupkey;&lt;br /&gt; by my;&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;data &lt;em&gt;null&lt;/em&gt;;&lt;br /&gt; set rick3 end=eof;&lt;br /&gt; I+1;&lt;br /&gt; II=left(put(I,2.));&lt;br /&gt; call symputx(&amp;#8216;year&amp;#8217;||II,year);&lt;br /&gt; call symputx(&amp;#8216;month&amp;#8217;||II,m);&lt;br /&gt; if eof then call symputx(&amp;#8216;total&amp;#8217;,II);&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;%macro getCalendar;&lt;br /&gt; %do i=1 %to &amp;total;&lt;br /&gt; data calendar&amp;i;&lt;br /&gt; date1 = mdy (&amp;amp;&amp;amp;month&amp;amp;i,1,&amp;amp;&amp;amp;year&amp;amp;i);&lt;br /&gt; date2 = intnx (&amp;#8216;month&amp;#8217;, date1, 1) &amp;#8211; 1; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;            do worddat = date1 to date2;&lt;br /&gt; wim = intck (&amp;#8216;week&amp;#8217;, date1, worddat);&lt;br /&gt; dim = worddat-date1+1;&lt;br /&gt; output;&lt;br /&gt; end; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;            format worddat  ddmmyy10.;&lt;br /&gt; keep   worddat  dim ;&lt;br /&gt; run;&lt;br /&gt; %end;&lt;br /&gt; %mend getCalendar;&lt;br /&gt; %getCalendar; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;%macro allCalendar;&lt;br /&gt; data Calendar;&lt;br /&gt; set %do i=1 %to &amp;total; calendar&amp;amp;i %end; ;&lt;br /&gt; run;&lt;br /&gt; %mend allCalendar;&lt;br /&gt; %allCalendar&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;3-4-get-holidays&#34;&gt;3-4: get holidays&lt;/h3&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;I have no specific idea about US holidays and just referenced the two pages:&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[&lt;span style=&#34;font-size: small;&#34;&gt;Recently I posted a &lt;/span&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/2011/07/17/sas-bloggers-in-action1-rick-wicklin-sasiml-and-color-revolution/&#34; target=&#34;_blank&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;frequency analysis&lt;/span&gt;&lt;/a&gt; &lt;span style=&#34;font-size: small;&#34;&gt;on Rick Wicklin’s popular &lt;/span&gt;&lt;a href=&#34;http://blogs.sas.com/iml/&#34; target=&#34;_blank&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;SAS/IML blog&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;font-size: small;&#34;&gt;. Sanjay Matange also produced a nice &lt;/span&gt;&lt;a href=&#34;https://sites.google.com/site/odsgraphics/general/rick-s-blog-history-heatmap&#34; target=&#34;_blank&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;heatmap on Rick’s blogging history&lt;/span&gt;&lt;/a&gt; &lt;span style=&#34;font-size: small;&#34;&gt;using the summary data I published. Here just release the ideas and SAS codes to get data from Rick’s blog dynamically. You may modify the codes slightly to obtain data from all other SAS in-house blogs (&lt;/span&gt;&lt;a href=&#34;http://blogs.sas.com/index.php&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;http://blogs.sas.com/index.php&lt;/span&gt;&lt;/a&gt;&lt;span style=&#34;font-size: small;&#34;&gt;) since they share the same template. For other blogs, you should research the web pages accordingly to get the best suitable methods and this post can also serve as an example.&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;first-step-define-the-scope-1&#34;&gt;&lt;strong&gt;First step: define the scope&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;For my purpose, I only need the titles and publish dates of Rick’s posts. It is so called the “metadata” of the blog. I do not need all the post contents. By the way, if all information needed, you can use a blog backup tool, or write codes to retrieve all the pages of &lt;/span&gt;&lt;a href=&#34;http://blogs.sas.com/iml&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;http://blogs.sas.com/iml&lt;/span&gt;&lt;/a&gt; at the maximum depth&lt;span style=&#34;font-size: small;&#34;&gt;, or simply, you can write to Rick and say: hey Rick, could you please send me all the contents of your blog? And Rick may go to the management console of his own blog, export all the contents to an XML file and get back to you.&lt;/span&gt;&lt;/p&gt;

&lt;h1 id=&#34;second-step-analyze-the-web-pages-1&#34;&gt;&lt;strong&gt;Second step: analyze the web pages&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;Browse to the right panel of Rick’s blog, in the ARCHIVES frame, click “&lt;a href=&#34;http://blogs.sas.com/iml/index.php?/archive&#34; target=&#34;_blank&#34;&gt;Older&lt;/a&gt;”&lt;/span&gt;&lt;span style=&#34;font-size: small;&#34;&gt;:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image0026.jpg&#34;&gt;&lt;img style=&#34;display: block; float: none; margin-left: auto; margin-right: auto; border-width: 0px;&#34; title=&#34;clip_image002&#34; src=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image002_thumb1.jpg&#34; alt=&#34;clip_image002&#34; width=&#34;235&#34; height=&#34;298&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;And you get &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image0035.gif&#34;&gt;&lt;img style=&#34;display: block; float: none; margin-left: auto; margin-right: auto; border-width: 0px;&#34; title=&#34;clip_image003&#34; src=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image003_thumb.gif&#34; alt=&#34;clip_image003&#34; width=&#34;362&#34; height=&#34;274&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;This page just gives a big picture of Rick’s blog (ARCHIVE section is always a good place to get such metadata, for example, &lt;a href=&#34;http://www.jiangtanghu.com/blog/archives/&#34; target=&#34;_blank&#34;&gt;archives for my blog&lt;/a&gt;&lt;/span&gt;&lt;span style=&#34;font-size: small;&#34;&gt;). But we need more. Click “&lt;a href=&#34;http://blogs.sas.com/iml/index.php?/archives/2010/09/summary.html&#34; target=&#34;_blank&#34;&gt;view topics&lt;/a&gt;” for example of September, 2010:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image0045.gif&#34;&gt;&lt;img style=&#34;display: block; float: none; margin-left: auto; margin-right: auto; border-width: 0px;&#34; title=&#34;clip_image004&#34; src=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image004_thumb.gif&#34; alt=&#34;clip_image004&#34; width=&#34;372&#34; height=&#34;443&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;This page is exactly what we want with titles and dates. Open an editor to write codes immediately to read all the information in this page?—wait. Currently this blog has posts across 11 months and you can expect the increase. You should design a dynamic method to read all the topics pages: Sep 2010, Oct 2010, … and, &lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;today()&lt;/span&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;Return to the &lt;a href=&#34;http://blogs.sas.com/iml/index.php?/archive&#34; target=&#34;_blank&#34;&gt;archives page&lt;/a&gt;. RCM (right click your mouse) and select “View page source” if you use Google Chrome web browser (“View Source” in IE; “View Page Source” in Firefox) and you get all the HTML scripts (&lt;strong&gt;Note: you DO not need any knowledge of HTML to understand this post&lt;/strong&gt;). Copy and paste them into a text editor supporting HTML syntax highlighting (such as Notepad++). Search all instances of “view topics” we mentioned before:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image0067.jpg&#34;&gt;&lt;img style=&#34;display: block; float: none; margin-left: auto; margin-right: auto; border-width: 0px;&#34; title=&#34;clip_image006&#34; src=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image006_thumb2.jpg&#34; alt=&#34;clip_image006&#34; width=&#34;519&#34; height=&#34;312&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;We are lucky. They are 11 instances of “view topics” accompanying with 11 hyperlinks for the currently 11 months’ archives of Rick’s blog. We can read such 11 hyperlinks to a macro array for dynamic retrieval.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;Then we return to the single &lt;a href=&#34;http://blogs.sas.com/iml/index.php?/archives/2010/09/summary.html&#34; target=&#34;_blank&#34;&gt;topics page&lt;/a&gt;, for example of September, 2010&lt;/span&gt;&lt;span style=&#34;font-size: small;&#34;&gt;. Review the HTML source file. Search for “posted_by_date” and we get 14 instances which is same as the number of posts in September 2010:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image0086.jpg&#34;&gt;&lt;img style=&#34;display: block; float: none; margin-left: auto; margin-right: auto; border-width: 0px;&#34; title=&#34;clip_image008&#34; src=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image008_thumb1.jpg&#34; alt=&#34;clip_image008&#34; width=&#34;518&#34; height=&#34;307&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;We should also need to locate all the instances of titles. Search “/iml/index.php?/archives/” and we get 17 responses:&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image0106.jpg&#34;&gt;&lt;img style=&#34;display: block; float: none; margin-left: auto; margin-right: auto; border-width: 0px;&#34; title=&#34;clip_image010&#34; src=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/clip_image010_thumb1.jpg&#34; alt=&#34;clip_image010&#34; width=&#34;517&#34; height=&#34;298&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;We see 3 instances at end of the finding results don’t contain any titles. You can check other pages to confirm such pattern. Yes we can use regular expressions to parse the HTML pages to locate more exactly for the titles. But for a quick job and due to the relative simple HTML pages, some basic SAS character functions are enough for our purpose. In the following codes, limited regular expressions are used only to remove HTML tags such as “&lt;a href=”.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;After such explorative search of HTML scripts, we can get the basic idea where can we find the interested information. Then we begin to coding work.&lt;/span&gt;&lt;/p&gt;

&lt;h1 id=&#34;third-step-coding-at-last-1&#34;&gt;&lt;strong&gt;Third step: Coding at last!&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;For our purpose, we should first read the archive page to get all the topics links to a macro array, then read the all the topics pages dynamically. Finally, we should also add the all the calendar dates with holidays. Some friends may find that they met piece of the following codes before. Yes, such codes just assembled some skills what I learned from Art Carpenter, Richard DeVenezia, Jian Dai and lots of programmers before!&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-1-read-archive-page-1&#34;&gt;3-1: read archive page&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;%let URL=&lt;/span&gt;&lt;a href=&#34;http://blogs.sas.com/iml/index.php?/archive;&#34;&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;http://blogs.sas.com/iml/index.php?/archive;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;filename archive URL &amp;#8220;&amp;amp;URL&amp;#8221;; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;data archive;&lt;br /&gt; length text $1024;&lt;br /&gt; infile archive lrecl=1024;&lt;br /&gt; input text $;&lt;br /&gt; text= &lt;em&gt;infile&lt;/em&gt;;&lt;br /&gt; if index(text, &amp;#8220;&amp;gt;view topics&amp;lt;&amp;#8220;) then output;&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;data  archive1;&lt;br /&gt; set archive;&lt;br /&gt; summary=scan(text,4,&amp;rsquo;&amp;#8221;&amp;#8216;);&lt;br /&gt; run;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;3-2-read-all-topics-pages-1&#34;&gt;3-2: read all topics pages&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;data &lt;em&gt;null&lt;/em&gt;;&lt;br /&gt; set  archive1 end=eof;&lt;br /&gt; I+1;&lt;br /&gt; II=left(put(I,2.));&lt;br /&gt; call symputx(&amp;#8216;summary&amp;#8217;||II,summary);&lt;br /&gt; if eof then call symputx(&amp;#8216;total&amp;#8217;,II);&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;%macro readit;&lt;br /&gt; %do i=1 %to &amp;total;&lt;br /&gt; filename f&amp;amp;i URL &amp;#8220;&amp;amp;&amp;amp;summary&amp;amp;i&amp;#8221;;    &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;        data f&amp;i;&lt;br /&gt; length text $1024;&lt;br /&gt; infile f&amp;amp;i lrecl=1024;&lt;br /&gt; input text $;&lt;br /&gt; text= &lt;em&gt;infile&lt;/em&gt;;&lt;br /&gt; if index(text, &amp;#8220;/iml/index.php?/archives/&amp;#8221;) or index(text, &amp;#8220;posted_by_date&amp;#8221;) then output;&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;    &lt;span style=&#34;color: #ff0000;&#34;&gt;/&lt;em&gt;remove HTML tags;&lt;/em&gt;/&lt;/span&gt;&lt;br /&gt; data ff&amp;i;&lt;br /&gt; set f&amp;i;&lt;br /&gt; prx=prxparse(&amp;#8220;s/&amp;lt;.*?&amp;gt;//&amp;#8221;);&lt;br /&gt; call prxchange(prx,99,text);&lt;br /&gt; drop prx; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;        flag=ifn(mod(&lt;em&gt;n&lt;/em&gt;,2),1,2);&lt;br /&gt; grpn=&amp;i;&lt;br /&gt; if index(text,&amp;#8221;201&amp;#8243;) and length(text)&lt;10 then delete;&lt;span style=&#34;color: #ff0000;&#34;&gt;/&lt;em&gt;be carefull! hard coding;&lt;/em&gt;/&lt;br /&gt; &lt;/span&gt;        seq=&lt;em&gt;n&lt;/em&gt;;&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;     /&lt;em&gt;transpose data;&lt;/em&gt;/&lt;br /&gt; data fff&amp;i;&lt;br /&gt; set ff&amp;i;&lt;br /&gt; by grpn seq flag; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;        &lt;span style=&#34;color: #ff0000;&#34;&gt;retain&lt;/span&gt; title;&lt;br /&gt; if first.flag then title=lag(text);&lt;br /&gt; if flag=1 then delete;&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;    %end; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;%mend readit;&lt;br /&gt; %readit &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;%macro getall;&lt;br /&gt; data Rick;&lt;br /&gt; set %do i=1 %to &amp;total; fff&amp;amp;i %end; ;&lt;br /&gt; seq=seq/2;&lt;br /&gt; drop flag;&lt;br /&gt; run;&lt;br /&gt; %mend getall;&lt;br /&gt; %getall &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;data rick2;&lt;br /&gt; set rick; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;    datetime=scan(text,2,&amp;#8221;,&amp;#8221;);&lt;br /&gt; year=scan(text,2,&amp;#8221;.&amp;#8221;);&lt;br /&gt; month=scan(scan(text,2,&amp;#8221;,&amp;#8221;),1);&lt;br /&gt; day=scan(scan(text,2,&amp;#8221;,&amp;#8221;),2);&lt;br /&gt; week=scan(text,6);&lt;br /&gt; dt=compress(catx(&amp;#8220;&amp;#8221;,day,substr(month,1,3),year));&lt;br /&gt; worddat=input(dt,date9.);&lt;br /&gt; format worddat  ddmmyy10.;                         &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;    m=scan(put(worddat,ddmmyy10.),2);&lt;br /&gt; my=compress(catx(&amp;#8220;&amp;#8221;,year,m));&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;proc sort ;&lt;br /&gt; by  worddat descending seq ;&lt;br /&gt; run;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;p&gt;It is also interesting to add additional information for further analysis, such as all calendar dates during Rick’s blogging history and holidays.&lt;/p&gt;

&lt;h3 id=&#34;3-3-get-all-calendar-dates-1&#34;&gt;3-3: get all calendar dates&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;proc sort data=rick2 out=rick3 nodupkey;&lt;br /&gt; by my;&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;data &lt;em&gt;null&lt;/em&gt;;&lt;br /&gt; set rick3 end=eof;&lt;br /&gt; I+1;&lt;br /&gt; II=left(put(I,2.));&lt;br /&gt; call symputx(&amp;#8216;year&amp;#8217;||II,year);&lt;br /&gt; call symputx(&amp;#8216;month&amp;#8217;||II,m);&lt;br /&gt; if eof then call symputx(&amp;#8216;total&amp;#8217;,II);&lt;br /&gt; run; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;%macro getCalendar;&lt;br /&gt; %do i=1 %to &amp;total;&lt;br /&gt; data calendar&amp;i;&lt;br /&gt; date1 = mdy (&amp;amp;&amp;amp;month&amp;amp;i,1,&amp;amp;&amp;amp;year&amp;amp;i);&lt;br /&gt; date2 = intnx (&amp;#8216;month&amp;#8217;, date1, 1) &amp;#8211; 1; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;            do worddat = date1 to date2;&lt;br /&gt; wim = intck (&amp;#8216;week&amp;#8217;, date1, worddat);&lt;br /&gt; dim = worddat-date1+1;&lt;br /&gt; output;&lt;br /&gt; end; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;            format worddat  ddmmyy10.;&lt;br /&gt; keep   worddat  dim ;&lt;br /&gt; run;&lt;br /&gt; %end;&lt;br /&gt; %mend getCalendar;&lt;br /&gt; %getCalendar; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;%macro allCalendar;&lt;br /&gt; data Calendar;&lt;br /&gt; set %do i=1 %to &amp;total; calendar&amp;amp;i %end; ;&lt;br /&gt; run;&lt;br /&gt; %mend allCalendar;&lt;br /&gt; %allCalendar&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;3-4-get-holidays-1&#34;&gt;3-4: get holidays&lt;/h3&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;I have no specific idea about US holidays and just referenced the two pages:&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;](&lt;a href=&#34;http://support.sas.com/kb/24/655.html &#34;&gt;http://support.sas.com/kb/24/655.html &lt;/a&gt; &amp;ldquo;&lt;a href=&#34;http://support.sas.com/kb/24/655.html&#34;&gt;http://support.sas.com/kb/24/655.html&lt;/a&gt;  &amp;ldquo;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.opm.gov/Operating_Status_Schedules/fedhol/2011.asp&#34; title=&#34;http://www.opm.gov/Operating_Status_Schedules/fedhol/2011.asp&#34;&gt;http://www.opm.gov/Operating_Status_Schedules/fedhol/2011.asp&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span style=&#34;font-size: small;&#34;&gt;Also, the holidays and observances should manully modified according to personal working schedule. So this section serves only for demonstration.&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;; font-size: xx-small;&#34;&gt;filename hld url &amp;#8220;&lt;/span&gt;&lt;a href=&#34;http://jiangtanghu.com/docs/en/US_holiday.sas&amp;quot;;&#34;&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;; font-size: xx-small;&#34;&gt;http://jiangtanghu.com/docs/en/US_holiday.sas&amp;#8221;;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;%include hld; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;%US_holiday(2010)&lt;br /&gt; %US_holiday(2011) &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;data holiday;&lt;br /&gt; set holiday2010 holiday2011;&lt;br /&gt; run;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;proc sort ;&lt;br /&gt; by  worddat;&lt;br /&gt; run;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;3-5-put-all-together&#34;&gt;3-5: put all together&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;data rick_all;&lt;br /&gt; merge rick2 calendar holiday;&lt;br /&gt; by worddat;&lt;br /&gt; &lt;/span&gt;&lt;span style=&#34;font-family: &#39;Courier New&#39;;&#34;&gt;if worddat &amp;lt;&amp;#8217;03Sep2010&amp;#8217;d then delete;&lt;br /&gt; &lt;span style=&#34;color: #ff0000;&#34;&gt;if worddat &amp;gt;&amp;#8217;15Jul2011&amp;#8217;d then delete;&lt;/span&gt;&lt;br /&gt; drop today;&lt;br /&gt; run;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;A pooled version (beta) also available at&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://jiangtanghu.com/docs/en/SAS_Blogs.sas&#34;&gt;http://jiangtanghu.com/docs/en/SAS_Blogs.sas&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>SAS Bloggers In Action(1): Rick Wicklin, SAS/IML and &amp;ldquo;Color Revolution&amp;rdquo;</title>
      <link>/2011/07/17/sas-bloggers-in-action1-rick-wicklin-sas/iml-and-ldquocolor-revolutionrdquo/</link>
      <pubDate>Sun, 17 Jul 2011 16:16:49 +0000</pubDate>
      
      <guid>/2011/07/17/sas-bloggers-in-action1-rick-wicklin-sas/iml-and-ldquocolor-revolutionrdquo/</guid>
      <description>&lt;p&gt;It is well known that the French writer, author of &lt;em&gt;The Three Musketeer&lt;/em&gt;, Alexandre Dumas, wrote his master piece of work in different colored papers according to literary genre:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;font color=&#34;#ff0000&#34;&gt;&lt;strong&gt;non-fiction on&amp;#160; rose,&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font color=&#34;#0000ff&#34;&gt;&lt;strong&gt;fiction on blue,&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font color=&#34;#ffff80&#34;&gt;&lt;strong&gt;poetry on yellow&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The SAS blog writer, author of &lt;em&gt;&lt;a href=&#34;http://support.sas.com/publishing/authors/wicklin.html&#34;&gt;Statistical Programming with SAS/IML Software&lt;/a&gt;&lt;/em&gt;, &lt;a href=&#34;http://blogs.sas.com/iml/&#34; target=&#34;_blank&#34;&gt;Rick Wicklin&lt;/a&gt; of SAS Institute,&amp;#160; also leads a strong “color revolution” in SAS blog community:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/JohariWindow1.jpg&#34;&gt;&lt;img style=&#34;border-right-width: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto&#34; title=&#34;JohariWindow&#34; border=&#34;0&#34; alt=&#34;JohariWindow&#34; src=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/JohariWindow_thumb.jpg&#34; width=&#34;333&#34; height=&#34;330&#34; /&gt;&lt;/a&gt;In an interesting personal statement, &lt;a href=&#34;http://blogs.sas.com/iml/index.php?/archives/124-Blogging,-Programming,-and-Johari-Windows.html&#34;&gt;&lt;em&gt;Blogging, Programming, and Johari Windows&lt;/em&gt;&lt;/a&gt;, Rick summarizes his rich and colorful blogging rhythms according to the above &lt;a href=&#34;http://en.wikipedia.org/wiki/Johari_window&#34;&gt;&lt;em&gt;Johari window&lt;/em&gt;&lt;/a&gt;:&amp;#160;&amp;#160;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;font color=&#34;#ffff80&#34;&gt;Mondays&lt;/font&gt;, writes introductory notes (corresponding to the upper right quadrant of Johari window).&amp;#160;&lt;/li&gt;
&lt;li&gt;&lt;font color=&#34;#bcdee2&#34;&gt;Wednesdays&lt;/font&gt;, experimental articles on sampling, simulation and other statistical programming topics(lower left quadrant).&lt;/li&gt;
&lt;li&gt;&lt;font color=&#34;#008000&#34;&gt;Fridays&lt;/font&gt;, on explorative analysis of data (upper left quadrant).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So what about the &lt;font color=&#34;#ff8080&#34;&gt;lower right quadrant&lt;/font&gt;? Rick rediscovers and exposes what he once knew. Just suppose that, Rick picks up some codes he wrote before (ten years ago maybe) with big surprise: oh, who on earth wrote such damned clever beautiful codes? He or she must be in his/her aggressive youth. –then Rick wrote them all in blog.&lt;/p&gt;

&lt;p&gt;Here I produced a summary table for Rick’s blogging activities (numbers per month per weekday; before July 16, 2011 Beijing time; &lt;em&gt;next following post would introduce how to use SAS to analyze data from website such as Rick’s blog&lt;/em&gt;):&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/Rick.png&#34;&gt;&lt;img style=&#34;border-right-width: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto&#34; title=&#34;Rick&#34; border=&#34;0&#34; alt=&#34;Rick&#34; src=&#34;http://www.jiangtanghu.com/blog/wp-content/uploads/2011/07/Rick_thumb.png&#34; width=&#34;485&#34; height=&#34;433&#34; /&gt;&lt;/a&gt;&amp;#160;&lt;/p&gt;

&lt;p&gt;Key findings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rick is really a frequent and productive blogger with averagely 0.5 posts per day!&lt;/li&gt;
&lt;li&gt;Rick DOES keep his words. Most of the posts are published in &lt;font color=&#34;#008000&#34;&gt;Friday&lt;/font&gt;, &lt;font color=&#34;#bcdee2&#34;&gt;Wednesday &lt;/font&gt;and &lt;font color=&#34;#ffff80&#34;&gt;Monday&lt;/font&gt;(44, 44, 42 posts respectively).&lt;/li&gt;
&lt;li&gt;None posted in Saturdays and Sunday.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Rick began his writing since September&amp;#160; 3. 2010, &lt;font color=&#34;#008000&#34;&gt;Friday&lt;/font&gt;.&amp;#160; Up to July 15. 2011, &lt;font color=&#34;#008000&#34;&gt;Friday&lt;/font&gt;, there are 48 &lt;font color=&#34;#008000&#34;&gt;Fridays&lt;/font&gt;, 46 &lt;font color=&#34;#bcdee2&#34;&gt;Wednesdays &lt;/font&gt;and 46 &lt;font color=&#34;#ffff80&#34;&gt;Mondays&lt;/font&gt;.&amp;#160; Only 10 colored weekdays (4 &lt;font color=&#34;#008000&#34;&gt;Fridays&lt;/font&gt;, 2 &lt;font color=&#34;#bcdee2&#34;&gt;Wednesdays &lt;/font&gt;and 4 &lt;font color=&#34;#ffff80&#34;&gt;Mondays&lt;/font&gt;) passed with no posts and most all them are due to national holidays:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;06/09/2010 , &lt;font color=&#34;#ffff80&#34;&gt;Monday&lt;/font&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; : Labor Day&lt;br /&gt;
24/11/2010 , &lt;font color=&#34;#bcdee2&#34;&gt;Wednesday&lt;/font&gt;: round Thanksgiving Day&lt;br /&gt;
26/11/2010 , &lt;font color=&#34;#008000&#34;&gt;Friday&lt;/font&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; : round Thanksgiving Day&lt;br /&gt;
22/12/2010 , &lt;font color=&#34;#bcdee2&#34;&gt;Wednesday&lt;/font&gt;&lt;br /&gt;
24/12/2010 , &lt;font color=&#34;#008000&#34;&gt;Friday&lt;/font&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; : Christmas Day&lt;br /&gt;
27/12/2010 , &lt;font color=&#34;#ffff80&#34;&gt;Monday&lt;/font&gt;&lt;br /&gt;
31/12/2010 , &lt;font color=&#34;#008000&#34;&gt;Friday&lt;/font&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; : New Year’s Day&lt;br /&gt;
30/05/2011 , &lt;font color=&#34;#ffff80&#34;&gt;Monday&lt;/font&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; : Memorial Day&lt;br /&gt;
10/06/2011 , &lt;font color=&#34;#008000&#34;&gt;Friday&lt;/font&gt;&lt;br /&gt;
04/07/2011 , &lt;font color=&#34;#ffff80&#34;&gt;Monday&lt;/font&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; : Independence Day&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At least in 4 holidays (most in &lt;font color=&#34;#ffff80&#34;&gt;Monday&lt;/font&gt;), Rick was also active in writing:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;11/10/2011, &lt;font color=&#34;#ffff80&#34;&gt;Monday&lt;/font&gt;, Columbus Day: &lt;em&gt;How Do You Reshape a Matrix?&lt;/em&gt;&lt;br /&gt;
11/11/2010, Thursday, Veterans Day: &lt;em&gt;It&amp;#8217;s Here!&lt;/em&gt;&lt;br /&gt;
17/01/2011, &lt;font color=&#34;#ffff80&#34;&gt;Monday&lt;/font&gt;, Birthday of Martin Luther King, Jr.: &lt;em&gt;On the Flip Side: Exchanging Rows and Columns&lt;/em&gt;&lt;br /&gt;
21/02/2011, &lt;font color=&#34;#ffff80&#34;&gt;Monday&lt;/font&gt;, Washington’s Birthday: &lt;em&gt;How to Build a Vector from Expressions&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Amazing Rick keeps a fixed writing pattern and in next following post, detailed analysis and SAS codes will be presented so you can also keep eyes on the metadata of your favorite bloggers’ writing and may rise a question like:&lt;/p&gt;

&lt;p&gt;Hey Rick, what’s up in Jun 10, 2011, Friday?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Play Matrix within SAS(1): basic files processing</title>
      <link>/2010/10/29/play-matrix-within-sas1-basic-files-processing/</link>
      <pubDate>Fri, 29 Oct 2010 21:02:31 +0000</pubDate>
      
      <guid>/2010/10/29/play-matrix-within-sas1-basic-files-processing/</guid>
      <description>

&lt;p&gt;Recently I read Rick Wicklin’s &lt;a href=&#34;http://blogs.sas.com/iml/index.php&#34;&gt;IML blog&lt;/a&gt; with great interests(and anticipation for his fore-coming IML book,&amp;#160; &lt;em&gt;&lt;a href=&#34;http://support.sas.com/publishing/authors/wicklin.html&#34;&gt;Statistical Programming with SAS/IML Software&lt;/a&gt;&lt;/em&gt;). SAS programmers have the following programming tools to facilitate their daily work:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SAS data step: the basic SAS; a generation IV programming language, similar with other procedural languages such as C.&lt;/li&gt;
&lt;li&gt;SAS Proc SQL: SAS’s implementation of standard SQL(&lt;a href=&#34;http://en.wikipedia.org/wiki/SQL-92&#34;&gt;SQL-92&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;SAS IML(Interactive Matrix Language): SAS’s matrix manipulation language(like R and Matlab).&amp;#160; SAS IML Studio also supply IMLPlus programming language(IML+), an enhanced version of IML.&lt;/li&gt;
&lt;li&gt;SAS SCL(SAS Component Language): build in SAS/AF software, an object oriented programming(OOP) language for applications development.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am a heavy user of data steps and SQL and want to invest some bit on matrix manipulation. Although other wonderful languages available(such as R and Matlab), I found IML is a good choice for SAS programmers like me. It is well integrated within SAS system, and very important, almost all of the SAS Base functions and call routines are also supported by IML. Here some notes of IML 101(codes are self explanatory from a SAS Base point of view):&lt;/p&gt;

&lt;h1 id=&#34;1-iml-style-of-hello-world&#34;&gt;&lt;strong&gt;1. IML style of ‘hello world’&lt;/strong&gt;&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;&lt;font color=&#34;#ff0000&#34;&gt;proc iml&lt;/font&gt;; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; text=&amp;ldquo;Hello World!&amp;rdquo;; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &lt;font color=&#34;#ff0000&#34;&gt;print&lt;/font&gt; &amp;ldquo;IML saying&amp;rdquo; text; &lt;br /&gt;&lt;font color=&#34;#ff0000&#34;&gt;quit&lt;/font&gt;;&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and you got in output window:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;IML saying Hello World!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Like Proc SQL, IML begins with “&lt;font face=&#34;Courier New&#34;&gt;&lt;font color=&#34;#ff0000&#34;&gt;proc iml&lt;/font&gt;&lt;/font&gt;” , end with ”&lt;font color=&#34;#ff0000&#34;&gt;quit&lt;/font&gt;”, and every statements end with a semicolon. The key word “&lt;font color=&#34;#ff0000&#34;&gt;print&lt;/font&gt;” (an IML statement), just like “put” statement in data steps.&lt;/p&gt;

&lt;p&gt;An enhanced version of Hello World:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;&lt;font color=&#34;#ff0000&#34;&gt;options &lt;/font&gt;nocenter nodate nonumber; &lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;proc iml; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &lt;font color=&#34;#ff0000&#34;&gt;reset&lt;/font&gt; printall; &lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;&amp;#160;&amp;#160;&amp;#160; text=&amp;ldquo;Hello World!&amp;rdquo;; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; print &amp;ldquo;in &amp;amp;sysdate. IML saying&amp;rdquo; text; &lt;br /&gt;quit;&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Some SAS global options added(“&lt;font face=&#34;Courier New&#34;&gt;nocenter nodate nonumber&lt;/font&gt;”). The IML statement “&lt;font color=&#34;#ff0000&#34;&gt;reset&lt;/font&gt;&amp;rdquo;, works like “&lt;font face=&#34;Courier New&#34;&gt;&lt;font color=&#34;#ff0000&#34;&gt;options&lt;/font&gt;&lt;/font&gt;” statement to set some processing options within the IML(and you can guess the meaning of the options “printall”, just print all&amp;hellip; it is your turn to check the output window).&lt;/p&gt;

&lt;p&gt;A SAS system macro variable “&amp;amp;sysdate” is presented to encourage you to add any programming elements in SAS Base to IML.&lt;/p&gt;

&lt;h1 id=&#34;2-how-to-create-a-matrix-manually&#34;&gt;&lt;strong&gt;2. How to create a matrix manually&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;Actually, we have already create a matrix named “text” in the previous hello-world codes. It is a character &lt;font color=&#34;#ff0000&#34;&gt;scalar&lt;/font&gt;(matrix with only one element). If we want to avoid the SAS data steps’ style of assignment,&amp;#160; we can use &lt;font color=&#34;#ff0000&#34;&gt;&lt;em&gt;{}&lt;/em&gt;&lt;/font&gt; to enclose matrix elements:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;a={“a”};&amp;#160; /*a _char_ scalar */&lt;br /&gt;
b={1};&amp;#160;&amp;#160;&amp;#160;&amp;#160; /*a _num_ scalar*/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and a 2*3 matrix:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;c={1 2 3&lt;font color=&#34;#ff0000&#34;&gt;, &lt;br /&gt;&lt;/font&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; 2 3 4}; /*2 rows, 3 cols*/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Commas(&lt;font color=&#34;#ff0000&#34;&gt;,&lt;/font&gt;) are used to separate rows.&lt;/p&gt;

&lt;h1 id=&#34;3-how-to-create-a-matrix-by-functions&#34;&gt;3. How to create a matrix by functions&lt;/h1&gt;

&lt;p&gt;Some matrix reshaping functions:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;a=&lt;font color=&#34;#ff0000&#34;&gt;I&lt;/font&gt;(3);&amp;#160;&amp;#160;&amp;#160;&amp;#160; /*creates a 3&lt;em&gt;3 identity matrix&lt;/em&gt;/ &lt;br /&gt;b=&lt;font color=&#34;#ff0000&#34;&gt;J&lt;/font&gt;(2,3,5); /*creates a 2&lt;em&gt;3 matrix of identical values&lt;/em&gt;/ &lt;br /&gt;e=&lt;font color=&#34;#ff0000&#34;&gt;do&lt;/font&gt;(1,9,2); /&lt;em&gt;produces series, from 1 to 9, by increment 2&lt;/em&gt;/ &lt;br /&gt;c=&lt;font color=&#34;#ff0000&#34;&gt;block&lt;/font&gt;(a,b);/&lt;em&gt;forms a block-diagonal matrice&lt;/em&gt;/ &lt;br /&gt;d=&lt;font color=&#34;#ff0000&#34;&gt;diag&lt;/font&gt;(a);&amp;#160;&amp;#160; /&lt;em&gt;creates a diagonal matrix&lt;/em&gt;/ &lt;br /&gt;m=&lt;font color=&#34;#ff0000&#34;&gt;repeat&lt;/font&gt;(a,4,3); /*create a (3&lt;em&gt;4)&lt;/em&gt;(3&lt;em&gt;3) matrix by repeating&lt;/em&gt;/ &lt;br /&gt;n=&lt;font color=&#34;#ff0000&#34;&gt;T&lt;/font&gt;(b);&amp;#160;&amp;#160; /&lt;em&gt;transpose&lt;/em&gt;/&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;4-how-to-create-a-matrix-by-reading-a-sas-data-set&#34;&gt;4. How to create a matrix by reading a SAS data set&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;proc iml; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &lt;font color=&#34;#ff0000&#34;&gt;use&lt;/font&gt; sashelp.class; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &lt;font color=&#34;#ff0000&#34;&gt;read&lt;/font&gt; all var &lt;font color=&#34;#ff0000&#34;&gt;&lt;em&gt;char&lt;/em&gt;&lt;/font&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;font color=&#34;#ff0000&#34;&gt;into&lt;/font&gt; class_char; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; read all var &lt;font color=&#34;#ff0000&#34;&gt;&lt;em&gt;num&lt;/em&gt;&lt;/font&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; into class_num; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; read all var &lt;font color=&#34;#ff0000&#34;&gt;{&amp;ldquo;Age&amp;rdquo; &amp;ldquo;Height&amp;rdquo; &amp;ldquo;Weight&amp;rdquo;}&lt;/font&gt; into class_num2; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &lt;font color=&#34;#ff0000&#34;&gt;close&lt;/font&gt; sashelp.class; &lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;&amp;#160;&amp;#160;&amp;#160; print class_char class_num class_num2; &lt;br /&gt;quit;&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Note that it is a good habit to close the data file after reading or using it(&lt;em&gt;see&lt;/em&gt; Rick Wicklin’s &lt;em&gt;&lt;a href=&#34;http://blogs.sas.com/iml/index.php?/archives/8-Five-Reasons-to-CLOSE-Your-Data-Sets.html&#34;&gt;Five Reasons to CLOSE Your Data Sets&lt;/a&gt;&lt;/em&gt;).&lt;/p&gt;

&lt;h1 id=&#34;5-how-to-output-a-matrix-to-sas-dataset&#34;&gt;5. How to output a matrix to SAS dataset&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;proc iml; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; use sashelp.class; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; read all var &lt;em&gt;num&lt;/em&gt; into class_num; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; close sashelp.class; &lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;&amp;#160;&amp;#160;&amp;#160; &lt;font color=&#34;#ff0000&#34;&gt;create&lt;/font&gt; work.class_num &lt;font color=&#34;#ff0000&#34;&gt;from&lt;/font&gt; class_num; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &lt;font color=&#34;#ff0000&#34;&gt;append&lt;/font&gt; &lt;font color=&#34;#ff0000&#34;&gt;from&lt;/font&gt; class_num; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160; &lt;font color=&#34;#ff0000&#34;&gt;show datasets&lt;/font&gt;; &lt;br /&gt;quit;&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;160&#34;&gt;&amp;#160;&lt;/h1&gt;

&lt;h1 id=&#34;6-how-to-format-a-matrix&#34;&gt;6. How to format a matrix&lt;/h1&gt;

&lt;p&gt;/*version I: use matrix options*/&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;proc iml; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; use sashelp.class; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; col={&amp;ldquo;Age&amp;rdquo; &amp;ldquo;Height&amp;rdquo; &amp;ldquo;Weight&amp;rdquo;}; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; read all var col into class; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; read all var{name} into row; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; close sashelp.class; &lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; print class[&lt;font color=&#34;#ff0000&#34;&gt;rowname&lt;/font&gt;=row &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;font color=&#34;#ff0000&#34;&gt;colname&lt;/font&gt;=col &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;font color=&#34;#ff0000&#34;&gt;format&lt;/font&gt;=5.2 &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;font color=&#34;#ff0000&#34;&gt;label&lt;/font&gt;=&amp;ldquo;test, label&amp;rdquo;]; &lt;br /&gt;quit;&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;/*version II: use mattib statement*/&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;proc iml; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; use sashelp.class; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; col={&amp;ldquo;Age&amp;rdquo; &amp;ldquo;Height&amp;rdquo; &amp;ldquo;Weight&amp;rdquo;}; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; read all var col into class; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; read all var{name} into row; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; close sashelp.class; &lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;font color=&#34;#ff0000&#34;&gt;mattrib&lt;/font&gt; class rowname=row &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; colname=col &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; label=&amp;ldquo;test, label&amp;rdquo; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; format=5.2; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; print class; &lt;br /&gt;quit;&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;/*version III: avoid hardcoding—use IML function and operations*/&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;proc iml; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; use sashelp.class; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; &lt;font color=&#34;#ff0000&#34;&gt;col=T(contents(sashelp,class)[3:5]);&lt;/font&gt; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; read all var col into class; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; read all var{name} into row; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; close sashelp.class; &lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; mattrib class rowname=row &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; colname=col &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; label=&amp;ldquo;test, label&amp;rdquo; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; format=5.2; &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; print class; &lt;br /&gt;quit;&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;font face=&#34;Courier New&#34;&gt;&lt;em&gt;&lt;strong&gt;(IML matrix operations: to be continued)&lt;/strong&gt;&lt;/em&gt;&lt;/font&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>