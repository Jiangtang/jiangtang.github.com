<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Call Execute on Jiangtang Hu | 胡江堂</title>
    <link>/tags/call-execute/</link>
    <description>Recent content in Call Execute on Jiangtang Hu | 胡江堂</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Nov 2013 10:10:21 +0000</lastBuildDate>
    
	<atom:link href="/tags/call-execute/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SAS Data Driven Programming: My 4 Favorite Techniques</title>
      <link>/2013/11/07/sas-data-driven-programming-my-4-favorite-techniques/</link>
      <pubDate>Thu, 07 Nov 2013 10:10:21 +0000</pubDate>
      
      <guid>/2013/11/07/sas-data-driven-programming-my-4-favorite-techniques/</guid>
      <description>I use relatively fixed patterns in my SAS&amp;#160; programming life. For so called data driven programming (or dynamic programming), I used the following 4 techniques, chronologically:
 macro array  call execute  list processing  for each loop   For a quick demo, I will start with a simple scenario in which the data set sashelp.zipcode should be spitted to pieces of datasets by states (in real projects, the codes would be more complicated but share the simple atom structure).</description>
    </item>
    
  </channel>
</rss>